- name: installing shipping component
  hosts: shipping
  become: yes
  tasks:  
  - name: installing maven
    yum:
      name: maven
      state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out #output is variable name
    ignore_errors: true

  - when: out.rc != 0
    name: create user roboshop
    become: yes # we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop
  
  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download and extract
    unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    command: mv target/shipping-1.0.jar shipping.jar
      chdir: /app

  - name: Setup SystemD Shipping Service
    copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  
  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: installing mysql
    yum: 
      name: mysql
      state: installed
  
  
  - name: load mysql schema
    command: mysql -h mysql.maheshgolla.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true